% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preparation.R
\name{buildStructureEnsembles}
\alias{buildStructureEnsembles}
\title{List files for a single ensemble member}
\usage{
buildStructureEnsembles(ensemblePath, coordinateFilenames, tasFilenames,
  timeFilenames, dataDirectories)
}
\arguments{
\item{ensemblePath}{A character string that gives the absolute file path
for the subdirectory for a particular ensemble member of a climate
model within the user-specified projection directory.}

\item{coordinateFilenames}{Character string with filename of the file
containing the latitude and longitude coordinates in the bottom
directory of each ensemble member subdirectory. (See the package
vignette for an example of the required structure for this file.)}

\item{tasFilenames}{Character string with filename of the file
containing the climate projection data in the bottom
directory of each ensemble member subdirectory. (See the package
vignette for an example of the required structure for this file.)}

\item{timeFilenames}{Character string with filename of the file
containing the date dataframe in the bottom
directory of each ensemble member subdirectory. (See the package
vignette for an example of the required structure for this file.)}

\item{dataDirectories}{A list object, with two elements for each of the
two subdirectories included in the main directory. Typically, these will
be a historical directory and a climate projection directory. Each element
of the list should be named with the names of the subdirectories and
should provide a numeric vector with the starting year and ending year of
the data within each of the two subdirectories (e.g.,
\code{list("historical" = c(1980, 2004), "rcp85" = c(2006, 2099))})}
}
\value{
A list of length 2. The first element is the name of the ensemble
that was processed. The second element is a list containing the coordinate
comma-separated file, the projection data comma-separated file,
and the time data comma-separated file, respectively.
}
\description{
This function reads through the user-specified projections directory and
creates a list with all files in the subdirectory of a single
ensemble member subdirectory within a specific climate model
subdirectory.
}

