% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{check_params}
\alias{check_params}
\title{Check for input parameter errors}
\usage{
check_params(out, dataFolder, citycsv, coordinateFilenames, tasFilenames,
  timeFilenames, IDheatwavesFunction, thresholdBoundaries, projectionBoundaries,
  referenceBoundaries)
}
\arguments{
\item{out}{Character string with pathway to directory to which
heatwave files will be written.}

\item{dataFolder}{Character string with pathway to directory that
contains climate projection data.}

\item{citycsv}{Character string giving the filepath to a .csv
file with latitude and longitude values for each city.}

\item{coordinateFilenames}{Character string with name of the files
containing the latitude and longitude coordinates
corresponding to the columns of the time series data.}

\item{tasFilenames}{Character sting with name of files containing the time
series data.}

\item{timeFilenames}{Character string with name of the files containing the
date information corresponding to the rows of the time series data.}

\item{IDheatwavesFunction}{A character string with the name of the R function
to use to identify heatwaves. This function may be a user-specified custom
function to, but it must be loaded into the current R session. The
function name must be put in quotation marks.}

\item{thresholdBoundaries}{Custom time boundaries for determining
threshold temperatures for the heatwave definition.
Format: c(earliest year, latest year).
Restrictions: Bounds must be between the years 1980 and 2099 and
cannot span 2005 (i.e., both must either be before 2005 or after 2005).}

\item{referenceBoundaries}{Custom time boundaries to use in calculating
relative characteristics for heatwaves (i.e., to use when exploring
the role of adaptation in projections).
Format: c(earliest year, latest year).
Restrictions: Bounds must be between the years 1980 and 2099 and
cannot span 2005 (i.e., both must either be before 2005 or after 2005).}
}
\value{
Stops and returns an error if any parameters are incorrect.
}
\description{
This function goes through all parameter inputs for the main
functions, \code{\link{gen_hw_set}}, and makes sure all parameter
entries are in the appropriate format for following functions.
If any parameters are in an incorrect format, the function stops
and returns an error describing the problem.
}
\note{
This function does not check if the data is organized in the proper
   structure or if any data exists within the directory at all, so a
   call to \code{\link{gen_hw_set}} could still pass through this check and
   make it further through the function code with those mistakes.

 Does not check if the three ensemble final .csv data files exist,
   only if they have the .csv extension if they do exist. (Reminder:
   the final subdirectory should have the following three csv files:
   1. A file with the climate model projections, with grid points by
   column and times by row; 2. A file with the longitude and latitude
   of each grid point in the projection file and; 3. A file with the
   date of each of the rows in the projection file.)
}
\examples{
out <- "~/tmp/results"
dataFolder <- "inst/cmip5/"
citycsv <- "inst/cities.csv"
coordinateFilenames <- "latitude_longitude_NorthAmerica_12mo.csv"
tasFilenames <- "tas_NorthAmerica_12mo.csv"
timeFilenames <- "time_NorthAmerica_12mo.csv"
IDheatwavesFunction <- FALSE
dataBoundaries <- FALSE
referenceBoundaries <- FALSE

check_params(out, dataFolder, citycsv,
   coordinateFilenames, tasFilenames, timeFilenames,
   IDheatwavesFunction,
   dataBoundaries, referenceBoundaries)
}

